name: Release Pipeline

on:
    push:
        branches:
            - main
    pull_request:
        branches:
            - main

jobs:
    build:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout
              uses: actions/checkout@v4
            - name: Set up JDK
              uses: actions/setup-java@v4
              with:
                  java-version: 21
                  distribution: 'liberica'
                  cache: 'maven'
            - name: Build
              run: mvn -B -U -V -ntp -Drevision=${GITHUB_SHA::8} package

    sonar:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout
              uses: actions/checkout@v4
            - name: Set up JDK
              uses: actions/setup-java@v4
              with:
                  java-version: 21
                  distribution: 'liberica'
                  cache: 'maven'
            - name: Sonar Scan
              run: mvn -B -U -V -ntp -Drevision=${GITHUB_SHA::8} verify -Dsonar.token=${{ secrets.SONAR_TOKEN }} -Psonar

    deploy:
        runs-on: ubuntu-latest
        needs: build
        permissions:
            contents: read
            packages: write
        steps:
            - name: Checkout
              uses: actions/checkout@v4
            - name: Set up JDK
              uses: actions/setup-java@v4
              with:
                  java-version: 21
                  distribution: 'liberica'
                  cache: 'maven'
            - name: Publish to GitHub Packages
              run: mvn -B -U -V -ntp -Drevision=${GITHUB_SHA::8} -DskipTests deploy
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    release:
        runs-on: ubuntu-latest
        needs: deploy
        permissions:
          contents: write
        steps:
            - name: Checkout
              uses: actions/checkout@v4
            - name: Set up JDK
              uses: actions/setup-java@v4
              with:
                  java-version: 21
                  distribution: 'liberica'
                  cache: 'maven'
            - name: Prepare Release Asset
              run: mvn -B -U -V -ntp -Drevision=${GITHUB_SHA::8} -DskipTests jar:jar
            - name: Get artifactId
              id: get_artifact_id
              uses: christian-draeger/read-properties@1.1.1
              with:
                  path: './target/maven-archiver/pom.properties'
                  properties: 'artifactId'
            - name: Get version
              id: get_version
              uses: christian-draeger/read-properties@1.1.1
              with:
                  path: './target/maven-archiver/pom.properties'
                  properties: 'version'
            - name: Set environment variables
              env:
                  ARTIFACT_ID: ${{ steps.get_artifact_id.outputs.value }}
                  ARTIFACT_VERSION: ${{ steps.get_version.outputs.value }}
              run: |
                  echo "ARTIFACT_ID=$ARTIFACT_ID" >> $GITHUB_ENV
                  echo "ARTIFACT_VERSION=$ARTIFACT_VERSION" >> $GITHUB_ENV
            - name: Create Release
              uses: softprops/action-gh-release@v2
              with:
                name: 'v${{ env.ARTIFACT_VERSION }}'
                tag_name: '${{ env.ARTIFACT_VERSION }}'
